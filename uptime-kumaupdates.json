[
    {
        "UpdateStageName":"Node.js Download",
        "UpdateSourcePlatform":"Windows",
        "UpdateSource":"FetchURL",
        "UpdateSourceData":"https://nodejs.org/download/release/v20.4.0/node-v20.4.0-win-x64.zip",
        "UpdateSourceTarget":"{{$FullRootDir}}",
        "UnzipUpdateSource":true,
        "OverwriteExistingFiles":true,
        "DeleteAfterExtract":true,
        "OneShot":true
    },
    {
        "UpdateStageName":"Node.js Download",
        "UpdateSourcePlatform":"Linux",
        "UpdateSourceArch":"x86_64",
        "UpdateSource":"FetchURL",
        "UpdateSourceData":"https://nodejs.org/download/release/v20.4.0/node-v20.4.0-linux-x64.tar.gz",
        "UpdateSourceTarget":"{{$FullRootDir}}",
        "OverwriteExistingFiles":true,
        "OneShot":true
    },
    {
        "UpdateStageName":"Node.js Download",
        "UpdateSourcePlatform":"Linux",
        "UpdateSourceArch":"aarch64",
        "UpdateSource":"FetchURL",
        "UpdateSourceData":"https://nodejs.org/download/release/v20.4.0/node-v20.4.0-linux-arm64.tar.gz",
        "UpdateSourceTarget":"{{$FullRootDir}}",
        "OverwriteExistingFiles":true,
        "OneShot":true
    },
    {
        "UpdateStageName":"Node.js Extract",
        "UpdateSourcePlatform":"Windows",
        "UpdateSource":"Executable",
        "UpdateSourceData":"cmd.exe",
        "UpdateSourceArgs":"/C cd uptime-kuma && rmdir /S /Q node > NUL 2>&1 & rename node-v20.4.0-win-x64 node",
        "SkipOnFailure":false,
        "OneShot":true
    },
    {
        "UpdateStageName":"Node.js Extract",
        "UpdateSourcePlatform":"Linux",
        "UpdateSourceArch":"x86_64",
        "UpdateSource":"Executable",
        "UpdateSourceData":"/bin/bash",
        "UpdateSourceArgs":"-c \"cd uptime-kuma && rm -rf node >/dev/null 2>&1 && tar xfv node-v20.4.0-linux-x64.tar.gz >/dev/null 2>&1 && mv node-v20.4.0-linux-x64 node >/dev/null 2>&1 && rm node-v20.4.0-linux-x64.tar.gz\"",
        "SkipOnFailure":false,
        "OneShot":true
    },
    {
        "UpdateStageName":"Node.js Extract",
        "UpdateSourcePlatform":"Linux",
        "UpdateSourceArch":"aarch64",
        "UpdateSource":"Executable",
        "UpdateSourceData":"/bin/bash",
        "UpdateSourceArgs":"-c \"cd uptime-kuma && rm -rf node >/dev/null 2>&1 && tar xfv node-v20.4.0-linux-arm64.tar.gz >/dev/null 2>&1 && mv node-v20.4.0-linux-arm64 node >/dev/null 2>&1 && rm node-v20.4.0-linux-arm64.tar.gz\"",
        "SkipOnFailure":false,
        "OneShot":true
    },
	{
        "UpdateStageName":"Uptime Kuma Installation",
        "UpdateSourcePlatform":"Windows",
        "UpdateSource":"Executable",
        "UpdateSourceData":"powershell.exe",
        "UpdateSourceArgs":"-NoProfile -Command \"$ProgressPreference='SilentlyContinue'; cd uptime-kuma; Remove-Item srv -Recurse -Force -ErrorAction SilentlyContinue | Out-Null; if (-Not (Test-Path server/.git)) { git clone https://github.com/louislam/uptime-kuma.git srv; Copy-Item -Recurse -Force srv/* server/; Remove-Item srv -Recurse -Force -ErrorAction SilentlyContinue | Out-Null; cd server; $ReleaseVersion='{{ReleaseVersion}}'; if ([string]::IsNullOrEmpty($ReleaseVersion)) { $ReleaseVersion = (Invoke-RestMethod -UseBasicParsing -Uri 'https://api.github.com/repos/louislam/uptime-kuma/releases/latest').tag_name }; git checkout --force $ReleaseVersion; $env:PATH='{{$FullRootDir}}node/bin;' + $env:PATH; npm run setup } else { cd server; git fetch --all; $ReleaseVersion='{{ReleaseVersion}}'; if ([string]::IsNullOrEmpty($ReleaseVersion)) { $ReleaseVersion = (Invoke-RestMethod -UseBasicParsing -Uri 'https://api.github.com/repos/louislam/uptime-kuma/releases/latest').tag_name }; git checkout --force $ReleaseVersion; $env:PATH='{{$FullRootDir}}node/bin;' + $env:PATH; npm install --production; npm run download-dist }\"",
        "SkipOnFailure":false
    },
    {
        "UpdateStageName":"Uptime Kuma Installation",
        "UpdateSourcePlatform":"Linux",
        "UpdateSource":"Executable",
        "UpdateSourceData":"/bin/bash",
        "UpdateSourceArgs":"-c \"cd uptime-kuma && rm -rf srv; [ ! -d server/.git ] && { git clone https://github.com/louislam/uptime-kuma.git srv && \\cp -r srv/. server/ && rm -rf srv && cd server && ReleaseVersion=\\\"{{ReleaseVersion}}\\\" && [ -z \\\"$ReleaseVersion\\\" ] && ReleaseVersion=$(wget -qO- https://api.github.com/repos/louislam/uptime-kuma/releases/latest | jq -r .tag_name); git checkout $ReleaseVersion --force && export PATH={{$FullRootDir}}node/bin:$PATH && npm run setup; } || { cd server && git fetch --all && ReleaseVersion=\\\"{{ReleaseVersion}}\\\" && [ -z \\\"$ReleaseVersion\\\" ] && ReleaseVersion=$(wget -qO- https://api.github.com/repos/louislam/uptime-kuma/releases/latest | jq -r .tag_name); git checkout $ReleaseVersion --force && export PATH={{$FullRootDir}}node/bin:$PATH && npm install --production && npm run download-dist; }\"",
        "SkipOnFailure":false
    }
]